@model IEnumerable<ErpToolkit.Models.Customers>

@{
    ViewData["Title"] = "TableList";
}

@* Comment goes here
   --------------------------------------------------------------------------------------------------
    Bootstrap https://getbootstrap.com/docs/5.0/layout/columns/
    DataTable https://datatables.net/reference/option/columns.render
   --------------------------------------------------------------------------------------------------
*@

@section scripts {

    <link href="~/lib/datatables/datatables.css" rel="stylesheet">
    <script src="~/lib/datatables/datatables.js"></script>

@*     <script>
        $(document).ready(function () {
            $("#demoGrid").DataTable({

                "responsive": false, // disabilita funzione che adatta tabella a pagina e visualizza rimanenti colonne sotto
                "processing": true, // for show progress bar
                "serverSide": true, // for process server side
                "filter": true, // this is for disable filter (search box)
                "orderMulti": false, // for disable multiple column at once
                "pageLength": 10,

                "ajax": {
                    "url": "/Datatable/LoadData",
                    "type": "POST",
                    "datatype": "json"
                },

                "columnDefs":
                    [{
                        "targets": [0],
                        "visible": false,
                        "searchable": false
                    },
                    {
                        "targets": [7],
                        "searchable": false,
                        "orderable": false
                    },
                    {
                        "targets": [8],
                        "searchable": false,
                        "orderable": false,
                        "render": function (data, type, row, meta) {
                            //return '<a class="btn btn-primary" href="/Demo/Edit/' + row.CustomerID + '">Edit</a>';
                            //return '<button class="open-AddBookDialog btn btn-primary" data-bs-toggle="modal" data-bs-target="#EditModale" data-bs-id="' + row.customerID + '">Edit</button>';
                            //return '<input type="hidden" id="CustomerID" name="CustomerID" value="' + row.customerID + '" /><button type="submit" class="open-AddBookDialog btn btn-primary" data-bs-toggle="modal" data-bs-target="#EditModale">Edit</button>';
                            return '<button class="btn btn-primary" onclick="loadModalWithContent(\'EditModale\',\'/Datatable/EditCustomer\',\'' + row.customerID + '\')">Edit</button>';
                        }
                    },
                    {
                        "targets": [9],
                        "searchable": false,
                        "orderable": false,
                        "render": function (data, type, row, meta) {
                            //return '<a href="#" class="btn btn-danger" onclick=DeleteData("' + row.CustomerID + '"); >Delete</a>';
                            return '<button class="btn btn-primary" onclick="loadModalWithContent(\'DeleteModale\',\'/Datatable/AlertCustomer\',\'' + row.customerID + '\')">Delete</button>';
                        }
                    }],

                "columns": [
                    { "data": "customerID", "name": "CustomerID", "autoWidth": true },
                    { "data": "companyName", "name": "CompanyName", "defaultContent": ".", "autoWidth": true },
                    { "data": "contactName", "title": "ContactName", "name": "ContactName", "defaultContent": ".", "autoWidth": true },
                    { "data": "contactTitle", "name": "ContactTitle", "defaultContent": ".", "autoWidth": true },
                    { "data": "city", "name": "City", "defaultContent": ".", "autoWidth": true },
                    { "data": "postalCode", "name": "PostalCode", "defaultContent": ".", "autoWidth": true },
                    { "data": "country", "name": "Country", "defaultContent": ".", "autoWidth": true },
                    { "data": "phone", "name": "Phone", "title": "Status", "defaultContent": ".", "autoWidth": true },
                    { "data": null, "name": "Edit", "title": "<a href=\"#\"  class=\"btn btn- primary\" onclick=\"loadModalWithContent(\'EditModale\',\'/Datatable/EditCustomer\',\'\')\">Add</a>", "defaultContent": ".", "autoWidth": true },
                    { "data": null, "name": "Delete", "title": "", "defaultContent": ".", "autoWidth": true },
                ]
            });
        });


    </script>
 *@
}

@Html.AntiForgeryToken()
<!--GESTISCE AZIONI CLICK PULSANTE-->
@Html.Hidden("IsModalACTION", @ViewData["IsModalACTION"])
@Html.Hidden("IsPageACTION", @ViewData["IsPageACTION"])
@Html.Hidden("IsPageREDIRECT", @ViewData["IsPageREDIRECT"])
<br />
@* <table id="demoGrid" class="table table-striped table-bordered dt-responsive nowrap" width="100%" cellspacing="0">
    <thead>
        <tr>
            <th>CustomerID</th>
            <th>CompanyName</th>
            <th>ContactName</th>
            <th>ContactTitle</th>
            <th>City</th>
            <th>PostalCode</th>
            <th>Country</th>
            <th>Phone</th>
            <th>Edit</th>
            <th>Delete</th>
        </tr>
    </thead>
</table> *@

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.CustomerID)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CompanyName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ContactName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ContactTitle)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.City)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PostalCode)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Country)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Phone)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.CustomerID)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CompanyName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ContactName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ContactTitle)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.City)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PostalCode)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Country)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Phone)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.CustomerID">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.CustomerID">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.CustomerID">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>


<p>&shy;</p>
<p>&shy;</p>



